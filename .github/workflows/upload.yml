name: upload

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 */3 * * *'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.detect.outputs.projects }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect projects with Dockerfile
        id: detect
        run: |
          projects=$(find . -maxdepth 1 -type d \( ! -name . \) -exec test -f {}/Dockerfile \; -print | sed 's|^./||' | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected projects: $projects"
          echo "projects=$projects" >> $GITHUB_ENV
          echo "projects=$projects" >> $GITHUB_OUTPUT

  build-and-push:
    needs: prepare
    runs-on: ubuntu-lab
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.prepare.outputs.projects) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "TIMESTAMP=$(date -u +"%y%m%d%H%M")" >> $GITHUB_ENV
          echo "PROJECT_NAME=$(basename ${{ matrix.project }})" >> $GITHUB_ENV
          echo "IMAGE_NAME=refracta/$PROJECT_NAME" >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TIMESTAMP ${{ matrix.project }}

      - name: Push image
        run: |
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker push $IMAGE_NAME:$TIMESTAMP
          docker push $IMAGE_NAME:latest
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
